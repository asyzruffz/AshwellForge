@using AshwellForge.Admin.Services
@inject IDialogService DialogService

<MudPaper Width="100%" Class="pb-4">
    <MudList T="string" Dense="true" Gutters="true">
        <MudListSubheader Class="d-flex flex-grow-1 gap-2 align-center">
            <MudIcon Class="flex-none d-flex" Icon="@Icons.Material.Filled.FolderSpecial" Color="Color.Secondary" />
            <MudText Class="flex-1 d-flex" Typo="Typo.body1">Saved</MudText>
            <MudIconButton Class="flex-none d-flex" Icon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="@((e) => OpenNewServerDialog())" />
        </MudListSubheader>
        @foreach (var server in SavedServers)
        {
            <MudListItem Class="py-0">
                <ChildContent>
                    <IngestServerListItem Server="@server" Saveable="false" />
                </ChildContent>
            </MudListItem>
        }
        <MudDivider Class="mt-4" />
        <MudListSubheader Class="d-flex flex-grow-1 gap-2 align-center">
            <MudIcon Class="flex-none d-flex" Icon="@Icons.Material.Filled.ChatBubble" Color="Color.Secondary" />
            <MudText Class="flex-1 d-flex" Typo="Typo.body1">Twitch</MudText>
            <MudIconButton Class="flex-none d-flex" Icon="@Icons.Material.Filled.Refresh" Color="Color.Primary" OnClick="@((e) => Refresh())" />
        </MudListSubheader>
        @if (TwitchServers.Any())
        {
            <MudListItem Class="py-0">
                <ChildContent>
                    <IngestServerListItem Server="@TwitchServers.First()" Saveable="true" OnSave="SaveServer" />
                </ChildContent>
            </MudListItem>
            <MudListItem Text="Mirrors" Icon="@Icons.Material.Filled.KeyboardArrowRight">
                <NestedList>
                    @foreach (var server in TwitchServers.Skip(1))
                    {
                        <MudListItem Class="py-0">
                            <ChildContent>
                                <IngestServerListItem Server="@server" Saveable="true" OnSave="SaveServer" />
                            </ChildContent>
                        </MudListItem>
                    }
                </NestedList>
            </MudListItem>
        }
    </MudList>
</MudPaper>

@code {
    [Inject]
    StreamsApi api { get; set; } = default!;

    IEnumerable<IngestServer> SavedServers = new List<IngestServer>();
    IEnumerable<IngestServer> TwitchServers = new List<IngestServer>();

    protected override async Task OnInitializedAsync()
    {
        TwitchServers = await api.GetIngestServers("Twitch");
        SavedServers = await api.GetIngestServers("Saved");
    }

    async Task Refresh()
    {
        TwitchServers = await api.GetIngestServers("Twitch", true);
    }

    async Task SaveServer(IngestServer server)
    {
        await api.SaveIngestServer(server);
        ((List<IngestServer>)SavedServers).Add(server);
    }

    async Task OpenNewServerDialog()
    {
        var parameters = new DialogParameters<NewIngestServerDialog>
        {
            { x => x.OnSave, s => _ = SaveServer(s) }
        };
        var options = new DialogOptions
        {
            MaxWidth = MaxWidth.Small,
            FullWidth = true,
            CloseButton = true,
            BackdropClick = false,
        };

        await DialogService.ShowAsync<NewIngestServerDialog>("Add Ingest Server", parameters, options);
    }
}
